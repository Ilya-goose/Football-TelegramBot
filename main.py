import requests
from bs4 import BeautifulSoup

from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton, InlineKeyboardMarkup, \
    InlineKeyboardButton
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import ReplyKeyboardBuilder

import time
import asyncio
import sqlite3
from random import sample, choice


class Choose_country_season(StatesGroup):
    choose_count_state = State()
    choose_season_year = State()


class Price_footbollers(StatesGroup):
    country = State()


class Table_country(StatesGroup):
    contry = State()


class Game1(StatesGroup):
    expansive_player = State()
    raund = State()


class Game2(StatesGroup):
    raund = State()
    end = State()


# -------------------------------------------------------------------------------------------------------------------------------------------------
def scrapping_func():
    HEADERS = {
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'Accept-Language': 'ru,en;q=0.9',
        'Cache-Control': 'max-age=0',
        'Connection': 'keep-alive',
        # 'Cookie': 'cuid=URNWAmXzEi6m1RfvLywLAgB=; adtech_uid=5d6a8de7-e0cd-4a1e-a813-6ba3ff600e78%3Achampionat.com; _ym_uid=1710428723676643843; _ym_d=1710428723; _ga=GA1.2.207942962.1710428723; tmr_lvid=ba8f023a022541bf596badb14f13718e; tmr_lvidTS=1710428722927; top100_id=t1.648840.1046938194.1710428723132; chash=JHjcE50dnz; t3_sid_4422985=s1.1555167467.1710428723373.1710428868770.1.18; _gid=GA1.2.374741811.1712592006; domain_sid=ML0KHQslAcc8aOP3EjOxO%3A1712592006502; _ym_isad=2; _ym_visorc=b; vpuid=1712592009.248-3393906145093524; detect_count=0; topnews_tab=main; t3_sid_7643964=s1.984736811.1712592009244.1712592327444.1.22; t3_sid_7356279=s1.272884874.1712592009262.1712592327444.1.22; pushPageCount=18; last_visit=1712582126412%3A%3A1712592926412; _ga_YN3KE9VF4L=GS1.2.1712592006.2.1.1712592926.0.0.0; tmr_detect=0%7C1712592928956; t3_sid_648840=s1.1936531590.1712592005962.1712592988160.2.97; t3_sid_7726560=s1.1105528775.1712592005965.1712592988161.2.113',
        'Referer': 'https://www.championat.com/news/football/1.html',
        'Sec-Fetch-Dest': 'empty',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'same-origin',
        'Upgrade-Insecure-Requests': '1',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 YaBrowser/24.1.0.0 Safari/537.36',
        'sec-ch-ua': '"Not_A Brand";v="8", "Chromium";v="120", "YaBrowser";v="24.1", "Yowser";v="2.5"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
    }

    url = 'https://www.championat.com/news/football/1.html'
    response = requests.get(url=url, headers=HEADERS)
    soup = BeautifulSoup(response.text, 'lxml')

    block = soup.find_all('li', class_='news-item')

    spis = []
    for item in block:
        spis.append([item.find('div', class_='news-item__content').text.replace('\n', ''),
                     'https://www.championat.com' + item.find('a', class_='news-item__title').get('href')])

    return spis


async def send_photo(data):
    photo = FSInputFile(f'–¢—Ä–∞–Ω—Å—Ñ–µ—Ä—ã {data[1].split()[0]}/{data[2]}.png')
    await bot.send_photo(chat_id=data[0], photo=photo)


def random_footbollers(spis, num):
    return sample(spis, k=num)


# -------------------------------------------------------------------------------------------------------------------------------------------------


bot = Bot(token='6910912601:AAGuk-ug_YZZ412jjMoW1RXHbftapThUrHY')
dp = Dispatcher()

murkub = ReplyKeyboardMarkup(
    keyboard=([KeyboardButton(text='üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ üìù'), KeyboardButton(text='üé≠ –¢—Ä–∞–Ω—Å—Ñ–µ—Ä—ã üé≠')],
              [KeyboardButton(text='üí∞ –°—Ç–æ–∏–º–æ—Å—Ç–∏ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤ üí∞'), KeyboardButton(text='üìå–¢–∞–±–ª–∏—Ü—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤üìå')],
              [KeyboardButton(text='üïπ –ú–∏–Ω–∏-–∏–≥—Ä—ã üïπ')]), resize_keyboard=True)


# ---
@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        f'üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É—Ç–µ, {message.from_user.last_name}!\n–Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–∑–Ω–∞—Ç—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –æ –§–£–¢–ë–û–õ–ï ‚öΩ\nüòá –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
        reply_markup=murkub)


@dp.message(F.text == '‚û° –ù–ê–ó–ê–î ‚û°')
async def news(message: Message, state: FSMContext):
    news = scrapping_func()
    await message.answer('üßê –í—ã–±–∏—Ä–∞–π—Ç–µ —á—Ç–æ –≤–∞—Å –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç... üßê', reply_markup=murkub)
    await state.clear()


# ---

@dp.message(F.text == 'üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ üìù')
async def news(message: Message):
    news = scrapping_func()
    await message.answer(f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ: {len(news)} —à—Ç...',
                         reply_markup=ReplyKeyboardRemove())
    time.sleep(1)

    for i, elem in enumerate(news):
        await message.answer(f'üëâ {i + 1}) {elem[0]}\n\n', reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text='–ü–æ–¥—Ä–æ–±–Ω–µ–µ', url=elem[1])]]))
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))


# ---

@dp.message(F.text == 'üé≠ –¢—Ä–∞–Ω—Å—Ñ–µ—Ä—ã üé≠')
async def choose_country(message: Message, state: FSMContext):
    await state.set_state(Choose_country_season.choose_count_state)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–ê–Ω–≥–ª–∏—è üá¨üáß'), KeyboardButton(text='–ì–µ—Ä–º–∞–Ω–∏—è üá©üá™')],
        [KeyboardButton(text='–ò—Å–ø–∞–Ω–∏—è üá™üá∏'), KeyboardButton(text='–§—Ä–∞–Ω—Ü–∏—è üá´üá∑')],
        [KeyboardButton(text='–ò—Ç–∞–ª–∏—è üáÆüáπ'), KeyboardButton(text='–†–æ—Å—Å–∏—è üá∑üá∫')]
    ], resize_keyboard=True))


@dp.message(F.text == '–ê–Ω–≥–ª–∏—è üá¨üáß')
async def _(message: Message, state: FSMContext):
    await state.update_data(choose_country=message.text)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∑–æ–Ω –∏ –≥–æ–¥...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–ó–∏–º–∞ 2021'), KeyboardButton(text='–õ–µ—Ç–æ 2021')],
        [KeyboardButton(text='–ó–∏–º–∞ 2022'), KeyboardButton(text='–õ–µ—Ç–æ 2022')],
        [KeyboardButton(text='–ó–∏–º–∞ 2023'), KeyboardButton(text='–õ–µ—Ç–æ 2023')],
        [KeyboardButton(text='–ó–∏–º–∞ 2024')]
    ], resize_keyboard=True))


@dp.message(F.text == '–ì–µ—Ä–º–∞–Ω–∏—è üá©üá™')
async def _(message: Message, state: FSMContext):
    await state.update_data(choose_country=message.text)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∑–æ–Ω –∏ –≥–æ–¥...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–ó–∏–º–∞ 2021'), KeyboardButton(text='–õ–µ—Ç–æ 2021')],
        [KeyboardButton(text='–ó–∏–º–∞ 2022'), KeyboardButton(text='–õ–µ—Ç–æ 2022')],
        [KeyboardButton(text='–ó–∏–º–∞ 2023'), KeyboardButton(text='–õ–µ—Ç–æ 2023')],
        [KeyboardButton(text='–ó–∏–º–∞ 2024')]
    ], resize_keyboard=True))


@dp.message(F.text == '–ò—Å–ø–∞–Ω–∏—è üá™üá∏')
async def _(message: Message, state: FSMContext):
    await state.update_data(choose_country=message.text)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∑–æ–Ω –∏ –≥–æ–¥...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–ó–∏–º–∞ 2021'), KeyboardButton(text='–õ–µ—Ç–æ 2021')],
        [KeyboardButton(text='–ó–∏–º–∞ 2022'), KeyboardButton(text='–õ–µ—Ç–æ 2022')],
        [KeyboardButton(text='–ó–∏–º–∞ 2023'), KeyboardButton(text='–õ–µ—Ç–æ 2023')],
        [KeyboardButton(text='–ó–∏–º–∞ 2024')]
    ], resize_keyboard=True))


@dp.message(F.text == '–§—Ä–∞–Ω—Ü–∏—è üá´üá∑')
async def _(message: Message, state: FSMContext):
    await state.update_data(choose_country=message.text)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∑–æ–Ω –∏ –≥–æ–¥...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–ó–∏–º–∞ 2021'), KeyboardButton(text='–õ–µ—Ç–æ 2021')],
        [KeyboardButton(text='–ó–∏–º–∞ 2022'), KeyboardButton(text='–õ–µ—Ç–æ 2022')],
        [KeyboardButton(text='–ó–∏–º–∞ 2023'), KeyboardButton(text='–õ–µ—Ç–æ 2023')],
        [KeyboardButton(text='–ó–∏–º–∞ 2024')]
    ], resize_keyboard=True))


@dp.message(F.text == '–ò—Ç–∞–ª–∏—è üáÆüáπ')
async def _(message: Message, state: FSMContext):
    await state.update_data(choose_country=message.text)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∑–æ–Ω –∏ –≥–æ–¥...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–ó–∏–º–∞ 2021'), KeyboardButton(text='–õ–µ—Ç–æ 2021')],
        [KeyboardButton(text='–ó–∏–º–∞ 2022'), KeyboardButton(text='–õ–µ—Ç–æ 2022')],
        [KeyboardButton(text='–ó–∏–º–∞ 2023'), KeyboardButton(text='–õ–µ—Ç–æ 2023')],
        [KeyboardButton(text='–ó–∏–º–∞ 2024')]
    ], resize_keyboard=True))


@dp.message(F.text == '–†–æ—Å—Å–∏—è üá∑üá∫')
async def _(message: Message, state: FSMContext):
    await state.update_data(choose_country=message.text)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∑–æ–Ω –∏ –≥–æ–¥...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–ó–∏–º–∞ 2021'), KeyboardButton(text='–õ–µ—Ç–æ 2021')],
        [KeyboardButton(text='–ó–∏–º–∞ 2022'), KeyboardButton(text='–õ–µ—Ç–æ 2022')],
        [KeyboardButton(text='–ó–∏–º–∞ 2023'), KeyboardButton(text='–õ–µ—Ç–æ 2023')],
        [KeyboardButton(text='–ó–∏–º–∞ 2024')]
    ], resize_keyboard=True))

    await state.set_state(Choose_country_season.choose_season_year)


# ---

@dp.message(F.text == '–ó–∏–º–∞ 2021')
async def _(message: Message, state: FSMContext):
    data = [message.chat.id]
    get_data_state = await state.get_data()

    data.append(get_data_state['choose_country'][:])

    await state.update_data(choose_season_year=message.text)

    get_data_state = await state.get_data()
    data.append(get_data_state['choose_season_year'])
    await send_photo(data)
    await state.clear()
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))


@dp.message(F.text == '–õ–µ—Ç–æ 2021')
async def _(message: Message, state: FSMContext):
    data = [message.chat.id]
    get_data_state = await state.get_data()

    data.append(get_data_state['choose_country'][:])

    await state.update_data(choose_season_year=message.text)

    get_data_state = await state.get_data()
    data.append(get_data_state['choose_season_year'])

    await send_photo(data)
    await state.clear()
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))


@dp.message(F.text == '–ó–∏–º–∞ 2022')
async def _(message: Message, state: FSMContext):
    data = [message.chat.id]
    get_data_state = await state.get_data()

    data.append(get_data_state['choose_country'][:])

    await state.update_data(choose_season_year=message.text)

    get_data_state = await state.get_data()
    data.append(get_data_state['choose_season_year'])

    await send_photo(data)
    await state.clear()
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))


@dp.message(F.text == '–õ–µ—Ç–æ 2022')
async def _(message: Message, state: FSMContext):
    data = [message.chat.id]
    get_data_state = await state.get_data()

    data.append(get_data_state['choose_country'][:])

    await state.update_data(choose_season_year=message.text)

    get_data_state = await state.get_data()
    data.append(get_data_state['choose_season_year'])

    await send_photo(data)
    await state.clear()
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))


@dp.message(F.text == '–ó–∏–º–∞ 2023')
async def _(message: Message, state: FSMContext):
    data = [message.chat.id]
    get_data_state = await state.get_data()

    data.append(get_data_state['choose_country'][:])

    await state.update_data(choose_season_year=message.text)

    get_data_state = await state.get_data()
    data.append(get_data_state['choose_season_year'])

    await send_photo(data)
    await state.clear()
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))


@dp.message(F.text == '–õ–µ—Ç–æ 2023')
async def _(message: Message, state: FSMContext):
    data = [message.chat.id]
    get_data_state = await state.get_data()

    data.append(get_data_state['choose_country'][:])

    await state.update_data(choose_season_year=message.text)

    get_data_state = await state.get_data()
    data.append(get_data_state['choose_season_year'])
    await send_photo(data)
    await state.clear()
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))


@dp.message(F.text == '–ó–∏–º–∞ 2024')
async def _(message: Message, state: FSMContext):
    data = [message.chat.id]
    get_data_state = await state.get_data()
    print(get_data_state)
    data.append(get_data_state['choose_country'][:])

    await state.update_data(choose_season_year=message.text)
    print(get_data_state)

    get_data_state = await state.get_data()
    data.append(get_data_state['choose_season_year'])
    print(get_data_state)
    print(data)
    await send_photo(data)
    await state.clear()
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))


# ---

@dp.message(F.text == 'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç–∏ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤ üí∞')
async def prices(message: Message, state: FSMContext):
    await state.set_state(Price_footbollers.country)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='üá¨üáß –ê–Ω–≥–ª–∏—è'), KeyboardButton(text='üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è')],
        [KeyboardButton(text='üá™üá∏ –ò—Å–ø–∞–Ω–∏—è'), KeyboardButton(text='üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è')],
        [KeyboardButton(text='üáÆüáπ –ò—Ç–∞–ª–∏—è'), KeyboardButton(text='üá∑üá∫ –†–æ—Å—Å–∏—è')]
    ], resize_keyboard=True))


@dp.message(F.text == 'üá¨üáß –ê–Ω–≥–ª–∏—è')
async def __(message: Message, state: FSMContext):
    await message.answer('–¢–æ–ø 50 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ñ—É—Ç–±–æ–ª—Å—Ç–æ–≤ –ê–Ω–≥–ª–∏–∏ ü§ë', reply_markup=ReplyKeyboardRemove())
    db = sqlite3.connect('basedata.db')
    cur = db.cursor()
    cur.execute('SELECT * FROM –ê–Ω–≥–ª–∏—è')
    s = ''
    for item in cur.fetchall()[:51]:
        s += f'{item[0]}   --->   {item[1]}\n'
    await message.answer(s)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è')
async def __(message: Message, state: FSMContext):
    await message.answer('–¢–æ–ø 50 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ñ—É—Ç–±–æ–ª—Å—Ç–æ–≤ –ì–µ—Ä–º–∞–Ω–∏–∏ ü§ë', reply_markup=ReplyKeyboardRemove())
    db = sqlite3.connect('basedata.db')
    cur = db.cursor()
    cur.execute('SELECT * FROM –ì–µ—Ä–º–∞–Ω–∏—è')
    s = ''
    for item in cur.fetchall()[:51]:
        s += f'{item[0]}   --->   {item[1]}\n'

    await message.answer(s)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üá™üá∏ –ò—Å–ø–∞–Ω–∏—è')
async def __(message: Message, state: FSMContext):
    await message.answer('–¢–æ–ø 50 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ñ—É—Ç–±–æ–ª—Å—Ç–æ–≤ –ò—Å–ø–∞–Ω–∏–∏ ü§ë', reply_markup=ReplyKeyboardRemove())
    db = sqlite3.connect('basedata.db')
    cur = db.cursor()
    cur.execute('SELECT * FROM –ò—Å–ø–∞–Ω–∏—è')
    s = ''
    for item in cur.fetchall()[:51]:
        s += f'{item[0]}   --->   {item[1]}\n'

    await message.answer(s)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è')
async def __(message: Message, state: FSMContext):
    await message.answer('–¢–æ–ø 50 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ñ—É—Ç–±–æ–ª—Å—Ç–æ–≤ –§—Ä–∞–Ω—Ü–∏–∏ ü§ë', reply_markup=ReplyKeyboardRemove())
    db = sqlite3.connect('basedata.db')
    cur = db.cursor()
    cur.execute('SELECT * FROM –§—Ä–∞–Ω—Ü–∏—è')
    s = ''
    for item in cur.fetchall()[:51]:
        s += f'{item[0]}   --->   {item[1]}\n'
    await message.answer(s)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üáÆüáπ –ò—Ç–∞–ª–∏—è')
async def __(message: Message, state: FSMContext):
    await message.answer('–¢–æ–ø 50 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ñ—É—Ç–±–æ–ª—Å—Ç–æ–≤ –ò—Ç–∞–ª–∏–∏ ü§ë', reply_markup=ReplyKeyboardRemove())
    db = sqlite3.connect('basedata.db')
    cur = db.cursor()
    cur.execute('SELECT * FROM –ò—Ç–∞–ª–∏—è')
    s = ''
    for item in cur.fetchall()[:51]:
        s += f'{item[0]}   --->   {item[1]}\n'

    await message.answer(s)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üá∑üá∫ –†–æ—Å—Å–∏—è')
async def __(message: Message, state: FSMContext):
    await message.answer('–¢–æ–ø 50 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ñ—É—Ç–±–æ–ª—Å—Ç–æ–≤ –†–æ—Å—Å–∏–∏ ü§ë', reply_markup=ReplyKeyboardRemove())
    db = sqlite3.connect('basedata.db')
    cur = db.cursor()
    cur.execute('SELECT * FROM –†–æ—Å—Å–∏—è')
    s = ''
    for item in cur.fetchall()[:51]:
        s += f'{item[0]}   --->   {item[1]}\n'

    await message.answer(s)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üìå–¢–∞–±–ª–∏—Ü—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤üìå')
async def tables(message: Message, state: FSMContext):
    await state.set_state(Table_country.contry)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É...', reply_markup=ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='üá¨üáß –ê–Ω–≥–ª–∏—è üá¨üáß'), KeyboardButton(text='üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è üá©üá™')],
        [KeyboardButton(text='üá™üá∏ –ò—Å–ø–∞–Ω–∏—è üá™üá∏'), KeyboardButton(text='üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è üá´üá∑')],
        [KeyboardButton(text='üáÆüáπ –ò—Ç–∞–ª–∏—è üáÆüáπ'), KeyboardButton(text='üá∑üá∫ –†–æ—Å—Å–∏—è üá∑üá∫')]
    ], resize_keyboard=True))


@dp.message(F.text == 'üá¨üáß –ê–Ω–≥–ª–∏—è üá¨üáß')
async def tables(message: Message, state: FSMContext):
    photo = FSInputFile(f'–§–æ—Ç–∫–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤/–ê–Ω–≥–ª–∏—è.png')
    await bot.send_photo(chat_id=message.chat.id, photo=photo)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è üá©üá™')
async def tables(message: Message, state: FSMContext):
    photo = FSInputFile(f'–§–æ—Ç–∫–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤/–ì–µ—Ä–º–∞–Ω–∏—è.png')
    await bot.send_photo(chat_id=message.chat.id, photo=photo)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üá™üá∏ –ò—Å–ø–∞–Ω–∏—è üá™üá∏')
async def tables(message: Message, state: FSMContext):
    photo = FSInputFile(f'–§–æ—Ç–∫–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤/–ò—Å–ø–∞–Ω–∏—è.png')
    await bot.send_photo(chat_id=message.chat.id, photo=photo)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è üá´üá∑')
async def tables(message: Message, state: FSMContext):
    photo = FSInputFile(f'–§–æ—Ç–∫–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤/–§—Ä–∞–Ω—Ü–∏—è.png')
    await bot.send_photo(chat_id=message.chat.id, photo=photo)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üáÆüáπ –ò—Ç–∞–ª–∏—è üáÆüáπ')
async def tables(message: Message, state: FSMContext):
    photo = FSInputFile(f'–§–æ—Ç–∫–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤/–ò—Ç–∞–ª–∏—è.png')
    await bot.send_photo(chat_id=message.chat.id, photo=photo)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üá∑üá∫ –†–æ—Å—Å–∏—è üá∑üá∫')
async def tables(message: Message, state: FSMContext):
    photo = FSInputFile(f'–§–æ—Ç–∫–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤/–†–æ—Å—Å–∏—è.png')
    await bot.send_photo(chat_id=message.chat.id, photo=photo)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ "‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                                                          resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üïπ –ú–∏–Ω–∏-–∏–≥—Ä—ã üïπ')
async def games(message: Message):
    await message.answer('üéÆ –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–≥—Ä—É –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ...', reply_markup=ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text='üë§ WHATS MY VALUE? üë§'), KeyboardButton(text='‚öΩ DRAFT ‚öΩ')]],
        resize_keyboard=True))


sqore = 0


@dp.message(F.text == 'üë§ WHATS MY VALUE? üë§')
async def game1(message: Message, state: FSMContext):
    await message.answer(
        '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã:\n–í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å—Å—è –¥–≤–∞ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–∞.\n–í–∞—à–∞ –∑–∞–¥–∞—á–∞ —É–≥–∞–¥–∞—Ç—å –∫—Ç–æ –∏–∑ –Ω–∏—Ö –¥–æ—Ä–æ–∂–µ, –≤—ã–±—Ä–∞–≤ –µ–≥–æ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.\n–ò–≥—Ä–∞ –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä –ø–æ–∫–∞ –≤—ã –Ω–µ –æ—à–∏–±—ë—Ç–µ—Å—å.\n–¢–∞–∫ –∂–µ –≤–∞–º –±—É–¥—É—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –æ—á–∫–∏ –∑–∞ –∫–∞–∂–¥—ã–π –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π —Ä–∞—É–Ω–¥.\n\n–ù–∞–∂–º–∏—Ç–µ –î–ê–õ–ï–ï –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã...',
        reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚úÖ –î–ê–õ–ï–ï ‚úÖ')]], resize_keyboard=True))


@dp.message(F.text == '‚úÖ –î–ê–õ–ï–ï ‚úÖ')
async def ready1(message: Message, state: FSMContext):
    bd = sqlite3.connect('basedata.db')
    cur = bd.cursor()

    spis = []
    for item in ['–ê–Ω–≥–ª–∏—è', '–ì–µ—Ä–º–∞–Ω–∏—è', '–†–æ—Å—Å–∏—è', '–ò—Å–ø–∞–Ω–∏—è', '–§—Ä–∞–Ω—Ü–∏—è', '–ò—Ç–∞–ª–∏—è']:
        cur.execute(f'SELECT * FROM {item}')
        spis += cur.fetchall()

    a, b = random_footbollers(spis, 2)
    name1, price1 = a[0], [a[1].split()[0].replace(',', '.'), a[1].split()[1]]
    name2, price2 = b[0], [b[1].split()[0].replace(',', '.'), b[1].split()[1]]

    await state.set_state(Game1.expansive_player)

    if price1[1] == price2[1] == '–º–ª–Ω':
        if float(price1[0]) > float(price2[0]):
            await state.update_data(expansive_player=name1)
        else:
            await state.update_data(expansive_player=name2)
    elif price1[1] == price2[1] == '—Ç—ã—Å':
        try:
            if int(price1[0]) > int(price2[0]):
                await state.update_data(expansive_player=name1)
            else:
                await state.update_data(expansive_player=name2)
        except:
            if float(price1[0]) > float(price2[0]):
                await state.update_data(expansive_player=name1)
            else:
                await state.update_data(expansive_player=name2)
    else:
        await state.update_data(expansive_player=name1)

    await state.set_state(Game1.raund)
    await message.answer(f'{a[0]}   ----   {b[0]}', reply_markup=ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=f'{name1}'), KeyboardButton(text=f'{name2}')]], resize_keyboard=True))


@dp.message(F.text == 'üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üîÑ')
async def ddd(message: Message, state: FSMContext):
    global sqore
    sqore = 0

    await message.answer('–ù–∞–∂–º–∏—Ç–µ –î–ê–õ–ï–ï –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã...',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚úÖ –î–ê–õ–ï–ï ‚úÖ')]],
                                                          resize_keyboard=True))


@dp.message(Game1.raund)
async def ddd(message: Message, state: FSMContext):
    data = await state.get_data()
    if message.text + ' ' == data['expansive_player']:
        global sqore
        sqore += 1
        await message.answer('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –î–ê–õ–ï–ï –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ',
                             reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚úÖ –î–ê–õ–ï–ï ‚úÖ')]],
                                                              resize_keyboard=True))
    else:
        await message.answer(f'–£–≤—ã, –Ω–æ –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞. ‚ò†\n–í–∞—à—å —Å—á–µ—Ç: {sqore}\n–ú–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞!',
                             reply_markup=ReplyKeyboardMarkup(keyboard=(
                                 [[KeyboardButton(text='üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üîÑ'), KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]]),
                                 resize_keyboard=True))
        await state.clear()


# -----

list_player = []
list_bot = []
spis_all = []


@dp.message(F.text == '‚öΩ DRAFT ‚öΩ')
async def game2(message: Message, state: FSMContext):
    await message.answer(
        '–ü—Ä–∞–≤–∏–ª–∞ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã:\n–í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω —Å–ø–∏—Å–æ–∫ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤, –∏–∑ –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –≤—ã–±—Ä–∞—Ç—å —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö.\n–ü—Ä–æ—Ç–∏–≤ –≤–∞—Å –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–∂–µ –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è —Å–æ–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ –º–æ–∂–Ω–æ –¥–æ—Ä–æ–∂–µ.\n–ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ—Ç –∫—Ç–æ —Å–æ–±–µ—Ä–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–æ—Ä–æ–∂–µ —á–µ–º —É –∞–±–æ–Ω–µ–Ω—Ç–∞.\n\n–ù–∞–∂–º–∏—Ç–µ ‚ùá –ü–†–û–î–û–õ–ñ–ò–¢–¨ ‚ùá –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã...',
        reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚ùá –ü–†–û–î–û–õ–ñ–ò–¢–¨ ‚ùá')]], resize_keyboard=True))
    bd = sqlite3.connect('basedata.db')
    cur = bd.cursor()

    spis = []
    for item in ['–ê–Ω–≥–ª–∏—è', '–ì–µ—Ä–º–∞–Ω–∏—è', '–†–æ—Å—Å–∏—è', '–ò—Å–ø–∞–Ω–∏—è', '–§—Ä–∞–Ω—Ü–∏—è', '–ò—Ç–∞–ª–∏—è']:
        cur.execute(f'SELECT * FROM {item}')
        spis += cur.fetchall()
    global spis_all

    spis_all = random_footbollers(spis, 22)


@dp.message(F.text == '‚ùá –ü–†–û–î–û–õ–ñ–ò–¢–¨ ‚ùá')
async def start_game2(message: Message, state: FSMContext):
    if spis_all:
        builder = ReplyKeyboardBuilder()
        for item in spis_all:
            builder.add(KeyboardButton(text=f'{item[0].strip()}'))
        builder.adjust(2)

        keyboard_murkab = builder.as_markup(resize_keyboard=True)

        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–∞...', reply_markup=keyboard_murkab)
        await state.set_state(Game2.raund)
    else:
        await message.answer('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.–ù–∞–∂–º–∏—Ç–µ ‚ú¥ –ö–û–ù–ï–¶ –ò–ì–†–´ ‚ú¥, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç...\n',
                             reply_markup=ReplyKeyboardMarkup(keyboard=([[KeyboardButton(text='‚ú¥ –ö–û–ù–ï–¶ –ò–ì–†–´ ‚ú¥')]]),
                                                              resize_keyboard=True))
        await state.set_state(Game2.end)


@dp.message(Game2.raund)
async def ddd(message: Message, state: FSMContext):
    global list_player, list_bot, spis_all

    player_choose = [item for item in spis_all if item[0].strip() == message.text][0]

    list_player.append(player_choose)
    spis_all.remove(player_choose)

    bot_choose = choice(spis_all)
    list_bot.append(bot_choose)
    spis_all.remove(bot_choose)

    await message.answer('–ë–æ—Ç —Å–¥–µ–ª–∞–ª —Å–≤–æ–π –≤—ã–±–æ—Ä. –ù–∞–∂–º–∏—Ç–µ –ü–†–û–î–û–õ–ñ–ò–¢–¨...',
                         reply_markup=ReplyKeyboardMarkup(keyboard=([[KeyboardButton(text='‚ùá –ü–†–û–î–û–õ–ñ–ò–¢–¨ ‚ùá')]]),
                                                          resize_keyboard=True))


@dp.message(Game2.end)
async def ddd(message: Message, state: FSMContext):
    print(list_player)
    print(list_bot)

    sqore_player = 0
    for item in list_player:
        if item[1].split()[1] == '–º–ª–Ω':
            price = float(item[1].split()[0].replace(',', '.')) * 1000
        else:
            price = float(item[1].split()[0].replace(',', '.'))
        sqore_player += price

    sqore_bot = 0
    for item in list_bot:
        if item[1].split()[1] == '–º–ª–Ω':
            price = float(item[1].split()[0].replace(',', '.')) * 1000
        else:
            price = float(item[1].split()[0].replace(',', '.'))
        sqore_bot += price
    await message.answer('–ò–¥–µ—Ç –ø–æ–¥—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏...', reply_markup=ReplyKeyboardRemove())
    time.sleep(3)
    if sqore_player > sqore_bot:
        await message.answer(
            f'üèÜ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üèÜ\n–í—ã –Ω–∞–±—Ä–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É –¥–æ—Ä–æ–∂–µ —á–µ–º –ë–æ—Ç.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã: {sqore_player / 1000} –º–ª–Ω ‚Ç¨.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: {sqore_bot / 1000} –º–ª–Ω ‚Ç¨.\n\n–ù–∞–∂–º–∏—Ç–µ üîÑ –ò–ì–†–ê–¢–¨ –°–ù–û–í–ê üîÑ,—á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑, –∏–ª–∏ ‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...',
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton(text='üîÑ –ò–ì–†–ê–¢–¨ –°–ù–û–í–ê üîÑ'), KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                resize_keyboard=True))
    elif sqore_player < sqore_bot:
        await message.answer(
            f'‚ò† –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. ‚ò†\n–ë–æ—Ç –Ω–∞–±—Ä–∞–ª –∫–æ–º–∞–Ω–¥—É –¥–æ—Ä–æ–∂–µ —á–µ–º —É –≤–∞—Å.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã: {sqore_player / 1000} –º–ª–Ω ‚Ç¨.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: {sqore_bot / 1000} –º–ª–Ω ‚Ç¨.\n\n–ù–∞–∂–º–∏—Ç–µ üîÑ –ò–ì–†–ê–¢–¨ –°–ù–û–í–ê üîÑ,—á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑, –∏–ª–∏ ‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...',
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton(text='üîÑ –ò–ì–†–ê–¢–¨ –°–ù–û–í–ê üîÑ'), KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                resize_keyboard=True))
    else:
        await message.answer(
            f'ü§≠ –û–≥–æ! –ü–æ—Ö–æ–∂–µ –≤—ã –Ω–∞–±—Ä–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–∞–∫—É—é –∂–µ –∫–∞–∫ –∏ –≤–∞—à —Å–æ–ø–µ—Ä–Ω–∏–∫! ü§≠\n–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã: {sqore_player / 1000} –º–ª–Ω ‚Ç¨.\n–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: {sqore_bot / 1000} –º–ª–Ω ‚Ç¨.\n\n–ù–∞–∂–º–∏—Ç–µ üîÑ –ò–ì–†–ê–¢–¨ –°–ù–û–í–ê üîÑ,—á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑, –∏–ª–∏ ‚û° –ù–ê–ó–ê–î ‚û°, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...',
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton(text='üîÑ –ò–ì–†–ê–¢–¨ –°–ù–û–í–ê üîÑ'), KeyboardButton(text='‚û° –ù–ê–ó–ê–î ‚û°')]],
                resize_keyboard=True))
    await state.clear()


@dp.message(F.text == 'üîÑ –ò–ì–†–ê–¢–¨ –°–ù–û–í–ê üîÑ')
async def ___(message: Message, state: FSMContext):
    await message.answer('–ù–∞–∂–º–∏—Ç–µ ‚ùá –ü–†–û–î–û–õ–ñ–ò–¢–¨ ‚ùá –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã...',
                         reply_markup=ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚ùá –ü–†–û–î–û–õ–ñ–ò–¢–¨ ‚ùá')]],
                                                          resize_keyboard=True))
    bd = sqlite3.connect('basedata.db')
    cur = bd.cursor()

    spis = []
    for item in ['–ê–Ω–≥–ª–∏—è', '–ì–µ—Ä–º–∞–Ω–∏—è', '–†–æ—Å—Å–∏—è', '–ò—Å–ø–∞–Ω–∏—è', '–§—Ä–∞–Ω—Ü–∏—è', '–ò—Ç–∞–ª–∏—è']:
        cur.execute(f'SELECT * FROM {item}')
        spis += cur.fetchall()
    global spis_all

    spis_all = random_footbollers(spis, 22)


# -------------------------------------------------------------------------------------------------------------------------------------------------

async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
